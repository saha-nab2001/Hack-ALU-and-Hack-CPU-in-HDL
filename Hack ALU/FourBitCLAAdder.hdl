//This chip is a four bit carry-look-ahead based adder
CHIP FourBitCLAAdder {
	IN X[4], Y[4], c0, P[4], G[4];
	OUT S[4], C[4];
	PARTS:
	And(a=P[0], b=c0, out=p0c0);
	Or(a=p0c0, b=G[0], out=c1);
	ThreeFanInAnd(a=P[1], b=P[0], c=c0, out=p1p0c0);
	And(a=P[1], b=G[0], out=p1g0);
	ThreeFanInOr(a=p1p0c0, b=p1g0, c=G[1], out=c2);
	FourFanInAnd(a=P[2], b=P[1], c=P[0], d=c0, out=p2p1p0c0);
	ThreeFanInAnd(a=P[2], b=P[1], c=G[0], out=p2p1g0);
	And(a=P[2], b=G[1], out=p2g1);
	FourFanInOr(a=p2p1p0c0, b=p2p1g0, c=p2g1, d=G[2], out=c3);
	FiveFanInAnd(a=P[3], b=P[2], c=P[1], d=P[0], e=c0, out=p3p2p1p0c0);
	FourFanInAnd(a=P[3], b=P[2], c=P[1], d=G[0], out=p3p2p1g0);
	ThreeFanInAnd(a=P[3], b=P[2], c=G[1], out=p3p2g1);
	And(a=P[3], b=G[2], out=p3g2);
	FiveFanInOr(a=p3p2p1p0c0, b=p3p2p1g0, c=p3p2g1, d=p3g2, e=G[3], out=c4);
	Xor(a=P[0], b=c0, out=S[0]);
	Xor(a=P[1], b=c1, out=S[1]);
	Xor(a=P[2], b=c2, out=S[2]);
	Xor(a=P[3], b=c3, out=S[3]);
	And(a=c1, b=c1, out=C[0]);
	And(a=c2, b=c2, out=C[1]);
	And(a=c3, b=c3, out=C[2]);
	And(a=c4, b=c4, out=C[3]);
}
